openapi: 3.0.0
info:
  title: Sistema de Cobranzas - API
  description: |
    API para la aplicación móvil del Sistema de Cobranzas con arquitectura multitenant.
    
    Esta API permite a los cobradores:
    * Autenticarse mediante OTP (One-Time Password)
    * Ver sus carteras asignadas y clientes
    * Consultar facturas pendientes de cobro
    * Registrar pagos con geolocalización
    * Consultar historiales de pago
    
    La API utiliza autenticación basada en JWT (JSON Web Tokens) y sigue el principio
    de filtrado por organización para garantizar que cada usuario solo acceda a los
    datos que le corresponden según su rol y asignaciones.
  version: 1.1.0
  contact:
    email: soporte@sistemacobranzas.com
servers:
  - url: https://api.sistemacobranzas.com/v1
    description: Servidor de producción
  - url: https://sandbox.sistemacobranzas.com/v1
    description: Servidor de pruebas
paths:
  /auth/otp/request:
    post:
      summary: Solicitar código OTP
      description: Envía un código OTP al correo o número de teléfono del usuario
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: cobrador@empresa.com
      responses:
        '200':
          description: OTP enviado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Se ha enviado un código OTP a su correo electrónico
                  expires_in:
                    type: integer
                    example: 300
                    description: Tiempo de expiración del código en segundos
                  otp:
                    type: string
                    example: "123456"
                    description: Solo para ambiente de pruebas
        '400':
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/otp/verify:
    post:
      summary: Verificar código OTP
      description: Verifica el código OTP y genera un token JWT
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                  example: cobrador@empresa.com
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: OTP verificado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  expires_in:
                    type: integer
                    example: 86400
                    description: Tiempo de expiración del token en segundos
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Código OTP inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/refresh:
    post:
      summary: Refrescar token JWT
      description: Genera un nuevo token JWT basado en un token válido existente. Útil para extender sesiones sin requerir un nuevo OTP.
      tags:
        - Autenticación
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token refrescado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  expires_in:
                    type: integer
                    example: 86400
                    description: Tiempo de expiración del token en segundos
        '401':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/profile:
    get:
      summary: Obtener perfil del usuario
      description: Obtiene la información del perfil del usuario autenticado
      tags:
        - Usuario
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Perfil obtenido correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/portfolios:
    get:
      summary: Obtener carteras del usuario
      description: Obtiene las carteras asignadas al usuario autenticado. Las carteras están filtradas por la organización del usuario, y para usuarios normales, solo se muestran las carteras específicamente asignadas a ellos.
      tags:
        - Usuario
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Carteras obtenidas correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  portfolios:
                    type: array
                    items:
                      $ref: '#/components/schemas/Portfolio'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clients:
    get:
      summary: Obtener clientes
      description: Obtiene la lista de clientes asociados a las carteras del usuario
      tags:
        - Clientes
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: portfolio_id
          schema:
            type: integer
          description: ID de la cartera para filtrar clientes
        - in: query
          name: search
          schema:
            type: string
          description: Término de búsqueda (nombre, documento, etc.)
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Número de resultados por página
      responses:
        '200':
          description: Clientes obtenidos correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  clients:
                    type: array
                    items:
                      $ref: '#/components/schemas/Client'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clients/{id}:
    get:
      summary: Obtener cliente por ID
      description: Obtiene la información detallada de un cliente específico
      tags:
        - Clientes
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del cliente
      responses:
        '200':
          description: Cliente obtenido correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  client:
                    $ref: '#/components/schemas/Client'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invoices:
    get:
      summary: Obtener facturas
      description: Obtiene la lista de facturas asociadas a los clientes de las carteras del usuario
      tags:
        - Facturas
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: client_id
          schema:
            type: integer
          description: ID del cliente para filtrar facturas
        - in: query
          name: portfolio_id
          schema:
            type: integer
          description: ID de la cartera para filtrar facturas
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, paid, cancelled, rejected]
          description: Estado de las facturas
        - in: query
          name: search
          schema:
            type: string
          description: Término de búsqueda (número de factura, concepto, etc.)
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Número de resultados por página
      responses:
        '200':
          description: Facturas obtenidas correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  invoices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invoices/{id}:
    get:
      summary: Obtener factura por ID
      description: Obtiene la información detallada de una factura específica
      tags:
        - Facturas
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la factura
      responses:
        '200':
          description: Factura obtenida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  invoice:
                    $ref: '#/components/schemas/Invoice'
                  client:
                    $ref: '#/components/schemas/Client'
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Factura no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /payments:
    get:
      summary: Obtener pagos
      description: Obtiene la lista de pagos registrados por el usuario
      tags:
        - Pagos
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: date_start
          schema:
            type: string
            format: date
          description: Fecha de inicio para filtrar pagos (YYYY-MM-DD)
        - in: query
          name: date_end
          schema:
            type: string
            format: date
          description: Fecha de fin para filtrar pagos (YYYY-MM-DD)
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Número de resultados por página
      responses:
        '200':
          description: Pagos obtenidos correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Registrar pago
      description: Registra un nuevo pago para una factura
      tags:
        - Pagos
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoice_id
                - amount
                - payment_method
              properties:
                invoice_id:
                  type: integer
                  example: 123
                amount:
                  type: number
                  format: float
                  example: 1500.50
                payment_method:
                  type: string
                  enum: [cash, transfer, check, credit_card, debit_card, qr_code, other]
                  example: cash
                reference_code:
                  type: string
                  example: "REF-12345"
                notes:
                  type: string
                  example: "Pago realizado en oficina del cliente"
                latitude:
                  type: number
                  format: float
                  example: -25.284447
                longitude:
                  type: number
                  format: float
                  example: -57.647433
      responses:
        '201':
          description: Pago registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Pago registrado exitosamente
                  payment:
                    $ref: '#/components/schemas/Payment'
        '400':
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Factura no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /payments/{id}:
    get:
      summary: Obtener pago por ID
      description: Obtiene la información detallada de un pago específico
      tags:
        - Pagos
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del pago
      responses:
        '200':
          description: Pago obtenido correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payment:
                    $ref: '#/components/schemas/Payment'
                  invoice:
                    $ref: '#/components/schemas/Invoice'
                  client:
                    $ref: '#/components/schemas/Client'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Pago no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Utilice el token JWT obtenido en la verificación OTP.
        El token contiene la información del usuario y su contexto de organización.
  schemas:
    User:
      type: object
      description: |
        Representa a un usuario del sistema. Cada usuario pertenece a una organización específica,
        excepto los superadmins que pueden acceder a todas las organizaciones.
      properties:
        id:
          type: integer
          example: 1
          description: Identificador único del usuario
        name:
          type: string
          example: Juan Pérez
          description: Nombre completo del usuario
        email:
          type: string
          format: email
          example: juan.perez@empresa.com
          description: Correo electrónico (utilizado para autenticación OTP)
        role:
          type: string
          enum: [superadmin, admin, user]
          example: user
          description: Rol del usuario (superadmin=acceso global, admin=administrador de organización, user=cobrador)
        organization_id:
          type: integer
          example: 1
          description: ID de la organización a la que pertenece el usuario
        organization_name:
          type: string
          example: Empresa ABC
          description: Nombre de la organización a la que pertenece el usuario
        created_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
          description: Fecha de creación del usuario
        portfolios_count:
          type: integer
          example: 3
          description: Cantidad de carteras asignadas al usuario
    Portfolio:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Cartera Comercial 2025
        description:
          type: string
          example: Clientes comerciales asignados para el año 2025
        organization_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
        clients_count:
          type: integer
          example: 45
        invoices_count:
          type: integer
          example: 87
        total_amount:
          type: number
          format: float
          example: 125000.00
    Client:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        business_name:
          type: string
          example: Empresa XYZ S.A.
        document_number:
          type: string
          example: 80012345-0
        contact_name:
          type: string
          example: María González
        email:
          type: string
          format: email
          example: contacto@empresaxyz.com
        phone:
          type: string
          example: +595 981 123456
        address:
          type: string
          example: Avda. Mcal. López 1234, Asunción
        status:
          type: string
          enum: [active, inactive]
          example: active
        latitude:
          type: number
          format: float
          example: -25.284447
        longitude:
          type: number
          format: float
          example: -57.647433
        organization_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
        updated_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
        invoices_count:
          type: integer
          example: 12
        invoices_amount:
          type: number
          format: float
          example: 25000.00
    Invoice:
      type: object
      properties:
        id:
          type: integer
          example: 1
        client_id:
          type: integer
          example: 1
        client_name:
          type: string
          example: Empresa XYZ S.A.
        document_number:
          type: string
          example: 80012345-0
        invoice_number:
          type: string
          example: A-001-0012345
        concept:
          type: string
          example: Servicio de consultoría
        amount:
          type: number
          format: float
          example: 1500.00
        due_date:
          type: string
          format: date
          example: 2025-04-30
        status:
          type: string
          enum: [pending, paid, cancelled, rejected]
          example: pending
        external_id:
          type: string
          example: EXT-12345
        notes:
          type: string
          example: Factura de servicios prestados en marzo
        organization_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
        updated_at:
          type: string
          format: date-time
          example: 2025-03-19T10:00:00Z
        payments_count:
          type: integer
          example: 0
        payments_amount:
          type: number
          format: float
          example: 0.00
        days_overdue:
          type: integer
          example: 0
    Payment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        invoice_id:
          type: integer
          example: 123
        user_id:
          type: integer
          example: 45
        collector_name:
          type: string
          example: Juan Pérez
        amount:
          type: number
          format: float
          example: 1500.50
        payment_method:
          type: string
          enum: [cash, transfer, check, credit_card, debit_card, qr_code, other]
          example: cash
        reference_code:
          type: string
          example: REF-12345
        payment_date:
          type: string
          format: date-time
          example: 2025-03-19T15:30:00Z
        status:
          type: string
          enum: [completed, pending]
          example: completed
        notes:
          type: string
          example: Pago realizado en oficina del cliente
        latitude:
          type: number
          format: float
          example: -25.284447
        longitude:
          type: number
          format: float
          example: -57.647433
        is_notified:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: 2025-03-19T15:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2025-03-19T15:30:00Z
        invoice_number:
          type: string
          example: A-001-0012345
        business_name:
          type: string
          example: Empresa XYZ S.A.
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 20
        total_pages:
          type: integer
          example: 5
        total_items:
          type: integer
          example: 87
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: Error message
        code:
          type: string
          example: INVALID_REQUEST